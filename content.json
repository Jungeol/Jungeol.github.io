{"meta":{"title":"Jgsim","subtitle":"","description":"","author":"Jungeol","url":"https://jungeol.github.io","root":"/"},"pages":[],"posts":[{"title":"[SQLite] 설치 및 기본 사용법","slug":"SQLite-설치-및-기본-사용법","date":"2020-02-26T02:02:50.000Z","updated":"2020-02-26T04:13:28.691Z","comments":true,"path":"2020/02/26/SQLite-설치-및-기본-사용법/","link":"","permalink":"https://jungeol.github.io/2020/02/26/SQLite-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95/","excerpt":"","text":"SQLite 란? 파일기반 작고 빠른 SQL 데이터 베이스 엔진 매우 심플하지만 RDBMS의 기능을 모두 갖추고 있다 생성시 해당 디렉토리에 `{NAME}.db’라는 파일이 생기며 이것을 기반으로 동작 한다 안정적이며 크로스플랫폼 지향, 유즈케이스가 많다 광범위한 분야에서 매우 일반적으로 사용됨 오픈소스이며 라이센스 걱정 없이 쓸 수 있음 이전버전과 호환되며 적어도 2050년까지 유지 할 계획 설치 방법ubuntuubuntu 18.04 기준 1$ sudo apt-get install sqlite3 libsqlite3-dev windowswindows 10 기준 https://www.sqlite.org/download.html 위의 링크에서 Precompiled Binaries for Windows 아래의 command-line shell이 포함되어있는 sqlite-tools-win32-x86-{버전}.zip을 받는다. 압축을 풀어 적당한 경로에 옮겨준다.(예제는 C:\\sqlite3경로로 진행) 환경변수 설정창에 들어가 Path를 설정해준다. 환경변수 설정창 들어가는 법 작업 표시줄에서 시스템 환경 변수 편집 검색 내 PC 오른클릭 -&gt; 속성 -&gt; 왼쪽 메뉴 중 고급 시스템 설정 -&gt; 고급탭에 환경 변수 시스템 변수에서 Path를 찾아 편집버튼을 눌러준다.(사용자 변수도 가능) 새로 만들기버튼을 눌러 이전 sqlite경로를 넣어준후 확인한다. PowerShell이나 cmd에서 버전정보가 나오면 성공이다. 1&gt; sqlite3 -version 기본 사용 법접속1$ sqlite3 test.db2SQLite version 3.31.1 2020-01-27 19:55:543Enter &quot;.help&quot; for usage hints.4sqlite&gt; 해당 디렉토리의 test.db에 접근한다. test.db라는 파일이 있으면 그쪽에 접근한다. 파일이 없으면 초기화된다.(테이블 데이터를 입력한 이후에 파일이 생김) 실행하면 전용 명령창이 실행되며, 여기서 직접 쿼리를 입력하거나 전용 명령어로 동작한다. 기본 명령어도움말.help로 도움말을 확인할 수 있다. 1sqlite&gt; .help 테이블 목록1sqlite&gt; .table 스키마 확인1sqlite&gt; .schema 명령어 뒤에 옵션으로 테이블 이름을 쓸 수 있다. 접속 종료1sqlite&gt; .exit 쿼리 작성아래의 예제와 같이 일반 SQL문으로 테이블을 다룰 수 있다. CREATE TABLE1sqlite&gt; CREATE TABLE TEST(2 ...&gt; id INTEGER PRIMARY KEY,3 ...&gt; name VARCHAR(10),4 ...&gt; number VARCHAR(10)5 ...&gt; ); INSERT1sqlite&gt; INSERT INTO TEST(name, number)2 ...&gt; VALUES(&#39;홍길동&#39;, &#39;01012345678&#39;); SELECT1sqlite&gt; SELECT * FROM TEST;21|홍길동|01012345678 PRIMARY KEY를 INTERGER로 등록하면 입력시 자동으로 값이 증가하는 특성이 있는것 같다. .header on과 .mode column등의 명령어로 테이블 출력을 좀더 편하게 볼 수 있다.","categories":[{"name":"db","slug":"db","permalink":"https://jungeol.github.io/categories/db/"},{"name":"sqlite","slug":"db/sqlite","permalink":"https://jungeol.github.io/categories/db/sqlite/"}],"tags":[{"name":"sqlite","slug":"sqlite","permalink":"https://jungeol.github.io/tags/sqlite/"}]},{"title":"Spring 기본 개념","slug":"Spring-기본-개념","date":"2020-02-19T06:17:48.000Z","updated":"2020-02-20T09:27:37.911Z","comments":true,"path":"2020/02/19/Spring-기본-개념/","link":"","permalink":"https://jungeol.github.io/2020/02/19/Spring-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90/","excerpt":"","text":"Spring 기본 개념Inversion of Control제어의 역전","categories":[],"tags":[{"name":"java","slug":"java","permalink":"https://jungeol.github.io/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://jungeol.github.io/tags/spring/"}]},{"title":"[Vagrant] Windows 사용법","slug":"Vagrant-Windows-사용법","date":"2020-01-07T03:13:10.000Z","updated":"2020-01-07T07:05:20.059Z","comments":true,"path":"2020/01/07/Vagrant-Windows-사용법/","link":"","permalink":"https://jungeol.github.io/2020/01/07/Vagrant-Windows-%EC%82%AC%EC%9A%A9%EB%B2%95/","excerpt":"","text":"[Vagrant] Windows 사용법Vagrant란? Vagrant는 주로 가상머신을 생성하고 관리할때 사용된다. 가상머신의 생성과 설정을 스크립트로 자동화 해주는 도구이다. Mac, Liux, Windows 등의 멀티 OS를 지원한다. Provider는 기본적으로 VirtualBox기준으로 되어있으며, VMware, Docker, Hyper-V 등도 지원한다. 주소: https://www.vagrantup.com/ 설치VirtualBoxhttps://www.vagrantup.com/docs/virtualbox/ 위의 링크에서 지원하는 VirtualBox의 버전을 확인 후 아래 링크에서 VirtualBox를 받는다. https://www.virtualbox.org/wiki/Downloads 최신버전을 지원하지 않는 경우, 해당 페이지에서 VirtualBox older builds를 찾아 받는다. Vagranthttps://www.vagrantup.com/downloads.html 위의 링크에서 Windows 64-bit버전을 다운받아 설치한다. 윈도우의 기본 설치경로는 C:\\HashiCorp\\Vagrant이다. 설치가 완료됐다면 cmd나 PowerShell에서 vagrant 명령어를 실행가능하다. 1$ vagrant -v2Vagrant 2.2.6 플러그인 설치아래는 Vagrant의 플러그인들을 정리해놓은 페이지이다. https://github.com/hashicorp/vagrant/wiki/Available-Vagrant-Plugins 필요한 플러그인이 있다면 아래처럼 설치하면 된다. 1$ vagrant plugin install &#123;&#123;플러그인 이름&#125;&#125; 사용중인 플러그인 vagrant-hostmanager /etc/hosts approach 기초 cli 명령어 vagrant init vagrant의 초기파일(vagrantfile)을 생성한다. vagrant up 초기파일(vagrantfile)의 설정에따라 가상머신을 생성한다. vagrant halt 가상머신을 종료한다. vagrant destroy 가상머신을 삭제한다. vagrant ssh 가상머신에 ssh로 접근한다. vagrant provision 가상머신의 설정을 변경하고 적용한다. 사용법기본적인 사용법: https://www.vagrantup.com/intro/getting-started/index.html 초기화 명령어1$ vagrant init init 명령어를 실행할경우, 해당 디렉토리에 Vagrantfile이라는 파일이 생긴다. 이것은 가상머신을 만들기위한 스크립트 파일이다. 스크립트아래는 centos6 가상머신 3개를 설치하고 초기화 스크립트를 실행하는 Vagrantfile이다. 1### 초기화 스크립트2$init_script = &lt;&lt;SCRIPT34yum -y update56yum -y install wget78SCRIPT910Vagrant.configure(\"2\") do |config|1112 # Define base image13 config.vm.box = \"generic/centos6\"1415 # Manage /etc/hosts on host and VMs16 config.hostmanager.enabled = false17 config.hostmanager.manage_host = true18 config.hostmanager.include_offline = true19 config.hostmanager.ignore_private_ip = false2021 # server0122 config.vm.define :server01 do |server01|23 server01.vm.provider :virtualbox do |v|24 v.name = \"server01\"25 v.customize [\"modifyvm\", :id, \"--memory\", \"2048\"]26 end27 server01.vm.network :private_network, ip: \"192.168.56.101\"28 server01.vm.hostname = \"server01\"29 server01.vm.provision :shell, :inline =&gt; $init_script # 초기화 스크립트 실행30 end3132 # server0233 config.vm.define :server02 do |server02|34 server02.vm.provider :virtualbox do |v|35 v.name = \"server02\"36 v.customize [\"modifyvm\", :id, \"--memory\", \"2048\"]37 end38 server02.vm.network :private_network, ip: \"192.168.56.102\"39 server02.vm.hostname = \"server02\"40 server02.vm.provision :shell, :inline =&gt; $init_script # 초기화 스크립트 실행41 end4243 # server0344 config.vm.define :server03 do |server03|45 server03.vm.provider :virtualbox do |v|46 v.name = \"server03\"47 v.customize [\"modifyvm\", :id, \"--memory\", \"2048\"]48 end49 server03.vm.network :private_network, ip: \"192.168.56.103\"50 server03.vm.hostname = \"server03\"51 server03.vm.provision :shell, :inline =&gt; $init_script # 초기화 스크립트 실행52 end53end Base Image에 대해1# Define base image2config.vm.box = \"generic/centos6\" 위의 base image를 설정하는 부분을 보면과연 이미지는 어디서 가져오는 것이며 다른 이미지를 쓰고싶으면 어디서 찾아야할까? 라는 의문이 생길것이다. 개발사에서 운영하는 Vagrant Cloud라는 공식 이미지 저장소가 있다. 아래의 링크에서 검색하여 사용하면 된다. https://app.vagrantup.com/boxes/search 이곳에는 Ubuntu, Cent OS 등등 메이저 OS의 배포판들은 다있다고 봐도 무방하다. 공개된 Box를 사용하는것은 제한없이 무료이며, 비공개 Box를 업로드하거나 팀원들과 공유하는것은 유료이다. 가상머신 생성위에서 초기화한 디렉토리에서 아래 명령어를 입력하면 스크립트가 실행되며 가상머신이 생성된다. 1$ vagrant up 가상머신 접속vagrant에서는 이미지 생성시 자동으로 ssh설정과 함께 private key를 발급해준다. 아래는 가상머신 ssh에 접속하기위한 명령어이다. 1$ vagrant ssh &#123;&#123;저장소이름&#125;&#125;","categories":[{"name":"vagrant","slug":"vagrant","permalink":"https://jungeol.github.io/categories/vagrant/"}],"tags":[{"name":"vagrant","slug":"vagrant","permalink":"https://jungeol.github.io/tags/vagrant/"}]},{"title":"엑셀로 간단하게 SQL생성하기","slug":"엑셀로-간단하게-SQL생성하기","date":"2019-12-20T02:33:55.000Z","updated":"2020-02-26T02:43:35.990Z","comments":true,"path":"2019/12/20/엑셀로-간단하게-SQL생성하기/","link":"","permalink":"https://jungeol.github.io/2019/12/20/%EC%97%91%EC%85%80%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-SQL%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/","excerpt":"","text":"엑셀로 간단하게 SQL 생성하기개발을 하다보면 DB에서 데이터를 만질일이 생각보다 많은것 같다. 예를들어, 데이터량이 그렇게 많지않은 한 테이블에 특정 조건에따라 데이터를 업데이트 해줘야하는 상황이라고 가정해보자. 손으로 직접 하나하나 하자니 양이 많고, 직접 스크립트를 짜서 해기도 좀 그런 애매한 상황… 이럴때 엑셀 수식을 이용해서 SQL문을 생성하면 매우 간단하게 해결할 수 있다. 기본 사용법엑셀 수식에서 기본적으로 알아야할 것은 딱 2가지다. String은 &quot;&quot; 안에 넣어서 String이나 Cell안의 내용을 합치는건 &amp; 예제1&#x3D; &quot;UPDATE SOME_TABLE SET SOME_DATE&#x3D;&#39;&quot; &amp; TEXT(B1, &quot;yyyy-mm-dd&quot;) &amp; &quot;&#39; WHERE &quot; &amp; &quot;SOME_VALUE&#x3D;&#39;&quot; &amp; A1 &amp; &quot;&#39;;&quot; 위의 수식을 이용해 아래처럼 만들어 보았다. (해당 예제는 MS Sql 기준) 유용한 엑셀 함수 TEXT 함수 날짜형식의 경우 그냥 합칠경우 숫자로나와서 DB의 날짜형식과 맞지않아 잘못들어가는 경우가 생긴다. 이때 사용하면 된다. ex&gt; TEXT(A1, “yyyy-mm-dd”)","categories":[{"name":"db","slug":"db","permalink":"https://jungeol.github.io/categories/db/"},{"name":"mssql","slug":"db/mssql","permalink":"https://jungeol.github.io/categories/db/mssql/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://jungeol.github.io/tags/sql/"},{"name":"excel","slug":"excel","permalink":"https://jungeol.github.io/tags/excel/"}]},{"title":"Vs code에서 spring boot 시작하기","slug":"Vs-code에서-spring-boot-시작하기","date":"2019-12-10T14:13:52.000Z","updated":"2020-01-07T03:10:50.708Z","comments":true,"path":"2019/12/10/Vs-code에서-spring-boot-시작하기/","link":"","permalink":"https://jungeol.github.io/2019/12/10/Vs-code%EC%97%90%EC%84%9C-spring-boot-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/","excerpt":"","text":"Visual Studio code에서 Spring boot 시작하기VS Code 익스텐션 설치VS Code에서 Spring boot를 사용하기 위해선 아래의 Extension들이 필요하다. VS Code의 왼쪽 Extensions 탭을 열고 키워드를 검색 하여 Spring Boot Extension Pack을 설치하도록 하자. 설치를 진행하면 하위의 Extension들이 자동으로 함께 설치된다. Spring Boot Extension Pack Spring Boot Tools Spring Initializr Java Support Spring Boot Dashboard 만약 Java Extension Pack이 없다면 해당 Extension도 설치해주자. Maven대신 Gradle을 사용할경우, Gradle Extension Pack도 함께 설치해주자. 프로젝트 만들기Spring Initializr 익스텐션이 Spring Boot 프로젝트의 초기화를 도와준다. 상단 메뉴의 View &gt; Command Palett 또는 Ctrl + Shift + P키를 이용해 Spring Initializr를 검색한다. 둘 중에 하나를 선택하여 진행하자. Spring Initializr: Generate a Gradle Project Spring Initializr: Generate a Maven Project 진행 언어선택지가 나오는데 Java를 선택하도록 하자. Java Kotlin Groovy 프로젝트 Group Id를 지정한다. 1com.example Artifact ID를 지정한다. 1demo Spring boot 버전을 선택한다. 2.2.2 2.2.3 (SNAPSHOT) 2.1.12 (SNAPSHOT) 2.1.11 추가도구(의존성)을 선택한다. Spring Boot DevTools Lombok Spring Web 어플리케이션 실행SPRING-BOOT 대시보드로 실행이 가능하다. 탐색기 &gt; SPRING-BOOT DASHBOARD &gt; 프로젝트이름 &gt; Start 로 어플리케이션 실행 프로젝트이름 을 오른 클릭 후 Open in Browser 가능 해당 메뉴에서 디버그 모드 실행도 가능하다. 프로젝트 설정시 아래 선택지중 하나를 골랐다면, Spring Initializr: Generate a Gradle Project Spring Initializr: Generate a Maven Project 초기화 후 바로 실행하 후 아래와 같은 에러 페이지로 연결이 되는데 정상적으로 구동된것이다. 1Whitelabel Error Page23This application has no explicit mapping for &#x2F;error, so you are seeing this as a fallback.45Wed Dec 11 00:12:44 KST 20196There was an unexpected error (type&#x3D;Not Found, status&#x3D;404).7No message available","categories":[{"name":"Java","slug":"Java","permalink":"https://jungeol.github.io/categories/Java/"},{"name":"Spring Boot","slug":"Java/Spring-Boot","permalink":"https://jungeol.github.io/categories/Java/Spring-Boot/"}],"tags":[{"name":"java","slug":"java","permalink":"https://jungeol.github.io/tags/java/"},{"name":"spring boot","slug":"spring-boot","permalink":"https://jungeol.github.io/tags/spring-boot/"}]},{"title":"git-basic","slug":"git-basic","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T08:34:05.646Z","comments":true,"path":"2019/12/04/git-basic/","link":"","permalink":"https://jungeol.github.io/2019/12/04/git-basic/","excerpt":"","text":"1.최초 설정사용자 이름과 메일 주소 설정1$ git config --global user.name &quot;FirstName Lastname&quot;2$ git config --global user.email &quot;yourEmail@example.com&quot; 명령어 UI 기본 설정1$ git config --golobal color.ui auto 편집기1$ git config --global core.editor &#123;&#123;editorName&#125;&#125; 설정 확인모든 설정 보기 / 특정 설정만 보기 1$ git config --list2$ git config user.name 설정파일 확인1$ cat ~&#x2F;.gitconfig2[user]3 name &#x3D; FirstName LastName4 email &#x3D; yourEmail@example.com5[color]6 ui &#x3D; auto7 ... 2. 기본파일 상태 확인1$ git status Modified 상태의 파일을 Stage1$ git add &#123;&#123;file or path&#125;&#125; commit1$ git commit2$ git commit -m &quot;&quot; 첫째줄: 한줄요약 둘째줄: 공백 셋째줄: 자세히 3. 리모트 저장소리모트 저장소 복제1$ git clone git:&#x2F;&#x2F;github.com&#x2F;.... 리모트저장소 확인 / 추가1$ git remote -v2$ git remote add &#123;&#123;remote-name&#125;&#125; &#123;&#123;remote-address&#125;&#125; 리모트 저장소 가져오기fetch 명령은 마지막 이후 수정된걸 가져옴. 수동으로 머지 필요. 1$ git fetch &#123;&#123;remote-name&#125;&#125; pull 명령은 자동으로 머지 1$ git pull &#123;&#123;remote-name&#125;&#125; 리모트 저장소 Push1git push &#123;&#123;remote-name&#125;&#125; &#123;&#123;branch-name&#125;&#125;","categories":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/tags/git/"}]},{"title":"csharp-linq","slug":"csharp-linq","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.748Z","comments":true,"path":"2019/12/04/csharp-linq/","link":"","permalink":"https://jungeol.github.io/2019/12/04/csharp-linq/","excerpt":"","text":"LinqFullOuterJoinmethod 방식으로는 한번에 가능 1static void Main(string[] args)2&#123;3 var ax &#x3D; new[] &#123; 4 new &#123; id &#x3D; 1, name &#x3D; &quot;John&quot; &#125;,5 new &#123; id &#x3D; 2, name &#x3D; &quot;Sue&quot; &#125; &#125;;6 var bx &#x3D; new[] &#123; 7 new &#123; id &#x3D; 1, surname &#x3D; &quot;Doe&quot; &#125;,8 new &#123; id &#x3D; 3, surname &#x3D; &quot;Smith&quot; &#125; &#125;;910 ax.FullOuterJoin(bx, a &#x3D;&gt; a.id, b &#x3D;&gt; b.id, (a, b, id) &#x3D;&gt; new &#123;a, b&#125;)11 .ToList().ForEach(Console.WriteLine);12&#125; query 방식으로는 union method로 가능 1var firstNames &#x3D; new[]2&#123;3 new &#123; ID &#x3D; 1, Name &#x3D; &quot;John&quot; &#125;,4 new &#123; ID &#x3D; 2, Name &#x3D; &quot;Sue&quot; &#125;,5&#125;;6var lastNames &#x3D; new[]7&#123;8 new &#123; ID &#x3D; 1, Name &#x3D; &quot;Doe&quot; &#125;,9 new &#123; ID &#x3D; 3, Name &#x3D; &quot;Smith&quot; &#125;,10&#125;;11var leftOuterJoin &#x3D; from first in firstNames12 join last in lastNames13 on first.ID equals last.ID14 into temp15 from last in temp.DefaultIfEmpty(new &#123; first.ID, Name &#x3D; default(string) &#125;)16 select new17 &#123;18 first.ID,19 FirstName &#x3D; first.Name,20 LastName &#x3D; last.Name,21 &#125;;22var rightOuterJoin &#x3D; from last in lastNames23 join first in firstNames24 on last.ID equals first.ID25 into temp26 from first in temp.DefaultIfEmpty(new &#123; last.ID, Name &#x3D; default(string) &#125;)27 select new28 &#123;29 last.ID,30 FirstName &#x3D; first.Name,31 LastName &#x3D; last.Name,32 &#125;;33var fullOuterJoin &#x3D; leftOuterJoin.Union(rightOuterJoin);","categories":[{"name":"csharp","slug":"csharp","permalink":"https://jungeol.github.io/categories/csharp/"}],"tags":[{"name":"csharp","slug":"csharp","permalink":"https://jungeol.github.io/tags/csharp/"}]},{"title":"git-ssh_key","slug":"git-ssh_key","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.751Z","comments":true,"path":"2019/12/04/git-ssh_key/","link":"","permalink":"https://jungeol.github.io/2019/12/04/git-ssh_key/","excerpt":"","text":"2. SSH Key 관련SSH Key 생성1$ ssh-keygen -t rsa -C &quot;yourEmail@example.com&quot;2Generating public&#x2F;private rsa key pair.3Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;yourUserDirectory&#x2F;.ssh&#x2F;id_rsa):4Created directory &#39;&#x2F;c&#x2F;Users&#x2F;yourUserDirectory&#x2F;.ssh&#39;.5Enter passphrase (empty for no passphrase):6Enter same passphrase again:7Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;yourUserDirectory&#x2F;.ssh&#x2F;id_rsa.8Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;yourUserDirectory&#x2F;.ssh&#x2F;id_rsa.pub. SSH Key 생성 결과1The key fingerprint is:2SHA256:[핑거프린트] yourEmail@example.com3The key&#39;s randomart image is:4+---[RSA 2048]----+5| [생략] |6+----[SHA256]-----+ Github에 공개키 등록Personal Settings -&gt; SSH and GPG Keys -&gt; New SSH Key -&gt; Key 내용에 id_rsa.pub 내용 복사 공개키 확인1$ cat ~&#x2F;.ssh&#x2F;id_rsa.pub2ssh-rsa [공개키 내용] yourEmail@example.com 동작 확인1$ ssh -T git@github.com2The authenticity of host &#39;github.com (192.30.255.113)&#39; can&#39;t be established.3RSA key fingerprint is SHA256:[핑거프린트].4Are you sure you want to continue connecting (yes&#x2F;no)?","categories":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/tags/git/"}]},{"title":"git-branch","slug":"git-branch","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.750Z","comments":true,"path":"2019/12/04/git-branch/","link":"","permalink":"https://jungeol.github.io/2019/12/04/git-branch/","excerpt":"","text":"branchcreate branch1$ git branch &#123;&#123;branch-name&#125;&#125; see branch info -&gt; log with decorate option. 1$ git log --decorate switch to branch1$ git checkout &#123;&#123;branch-name&#125;&#125; with create branch: -b option merge1$ git checkout &#123;&#123;master-branch&#125;&#125;2$ git merge &#123;&#123;branch-name&#125;&#125; delete branchwhen merged well, delete branch 1$ git branch -d &#123;&#123;branch-name&#125;&#125;","categories":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://jungeol.github.io/tags/git/"}]},{"title":"idea-코딩교육","slug":"idea-코딩교육","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.753Z","comments":true,"path":"2019/12/04/idea-코딩교육/","link":"","permalink":"https://jungeol.github.io/2019/12/04/idea-%EC%BD%94%EB%94%A9%EA%B5%90%EC%9C%A1/","excerpt":"","text":"코딩교육 아이디어 : python교육내용 변수1일 &#x3D; 12이 &#x3D; 23일 + 이45숫자1 &#x3D; 106숫자2 &#x3D; 57숫자1 + 숫자28... 함수1def 더하기(숫자1, 숫자2):2 return 숫자1 + 숫자23더하기(1, 2) …제출할 수 있는 server 교육과 점수매길수 있는 공간 제공 소스 저장하여 실행 가능 하도록?","categories":[{"name":"idea","slug":"idea","permalink":"https://jungeol.github.io/categories/idea/"}],"tags":[{"name":"idea","slug":"idea","permalink":"https://jungeol.github.io/tags/idea/"}]},{"title":"javascript-in_and_hasOwnProperty","slug":"javascript-in_and_hasOwnProperty","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.754Z","comments":true,"path":"2019/12/04/javascript-in_and_hasOwnProperty/","link":"","permalink":"https://jungeol.github.io/2019/12/04/javascript-in_and_hasOwnProperty/","excerpt":"","text":"Javascript ‘in’ and ‘object.hasOwnProperty’1var book &#x3D; &#123;2 title: &quot;High Performance JavaScript&quot;,3 publisher: &quot;Yahoo! Press&quot; 4&#125;;56alert(book.hasOwnProperty(&quot;title&quot;)); &#x2F;&#x2F;true7alert(book.hasOwnProperty(&quot;toString&quot;)); &#x2F;&#x2F;false8alert(&quot;title&quot; in book); &#x2F;&#x2F;true 9alert(&quot;toString&quot; in book); &#x2F;&#x2F;true","categories":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/tags/javascript/"}]},{"title":"javascript-map_reduce_filter","slug":"javascript-map_reduce_filter","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.755Z","comments":true,"path":"2019/12/04/javascript-map_reduce_filter/","link":"","permalink":"https://jungeol.github.io/2019/12/04/javascript-map_reduce_filter/","excerpt":"","text":"map, reduce, filterArray.prototype.map구문 1arr.map(callback[, thisArg]) callback 매개변수 currentValue: 현재 요소 index: 인덱스 array: 대상 Array thisArg: callback시 this로 활용되는 값사용법11[1, 2, 3, 4].map(function (value) &#123; return value * 2; &#125;);2&#x2F;&#x2F; [2, 4, 6, 8]3[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;].map(Number);4&#x2F;&#x2F; [1, 2, 3, 4] 사용법21&#x2F;&#x2F;Array.prototype.map;2[].map.call(&quot;Hello WOrld&quot;, function(x) &#123; return x.charCodeAt(0) &#125;);3&#x2F;&#x2F;[ 72, 101, 108, 108, 111, 32, 87, 79, 114, 108, 100 ] Array.prototype.reduce구문1arr.reduce(callback[, initialValue]); callback 매개변수 accumulator : initialValue이 존재하면 해당 값으로 초기화 이후 callback의 return 값으로 대체 currentValue : 현재 값 currentIndex : 현재 값의 Index array : 대상 Array 사용법1 initialValue 생략 currentIndex = 1 부터 시작1var arr &#x3D; [0, 1, 2, 3, 4];2var res1 &#x3D; arr.reduce(function (acc, curr, idx, arr) &#123; return acc + curr; &#125;);3&#x2F;&#x2F; sum of arr values : 104var res2 &#x3D; arr.reduce((acc, curr) &#x3D;&gt; Math.max(acc, curr));5&#x2F;&#x2F; max of arr values : 4 사용법2 initialValue 활용 currentIndex = 0 부터 시작 accumulator = initialValue 로 초기화1var arr &#x3D; [[0, 1], [2, 3], [4, 5]];2var res &#x3D; arr.reduce((acc, curr) &#x3D;&gt; acc.concat(curr), []);3&#x2F;&#x2F; [0, 1, 2, 3, 4, 5] 1var arr &#x3D; [2 &#123; id: 0, name: &quot;Adams&quot; &#125;, 3 &#123; id: 1, name: &quot;Edwards&quot; &#125;, 4 &#123; id: 2, name: &quot;Nelson&quot; &#125;5];6var res &#x3D; arr.reduce(function (acc, curr) &#123;7 acc[curr.id] &#x3D; curr.name;8 return acc;9&#125;, &#123;&#125;);10&#x2F;&#x2F; &#123; 0: &quot;Adams&quot;, 1: &quot;Edwards&quot;, 2: &quot;Nelson&quot; &#125; Array.prototype.filter구문1var new_array &#x3D; arr.filter(callback[, thisArg]); callback: element index array thisArg: callback의 this로 사용하는 값 사용법 1var result &#x3D; [1, 2, 3, 4, 5].filter(function (value) &#123; return value &gt; 3; &#125;);2&#x2F;&#x2F; [4, 5]","categories":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/tags/javascript/"}]},{"title":"linux-SFTP","slug":"linux-SFTP","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.758Z","comments":true,"path":"2019/12/04/linux-SFTP/","link":"","permalink":"https://jungeol.github.io/2019/12/04/linux-SFTP/","excerpt":"","text":"SFTP 만 로그인 되는 계정 설정 ssh에서 쉘을 허용할경우 보안 문제가 생김. 이때문에 가능한 사용자가 쉘 접근을 하지 못하게 막을 필요가 있음. nas의 경우 파일 다운로드 업로드가 주 용도이기 때문에 sftp만 이용할 수 있는 계정만있어도 충분 계정 생성계정생성 sftp만 로그인 되는 계정은 스스로 비밀번호를 변경할 수 없음1# 유저 생성2$ sudo useradd some-user-name3# 패스워드 설정4$ sudo passwd some-user-name sshd_config 수정config file 접근 1sudo nano /etc/ssh/sshd_config config file 수정 1#아래 내용 코멘트 처리 후 내용추가2#Subsystem sftp /usr/libexec/openssh/sftp-server3Subsystem sftp internal-sftp 1#config file 가장 마지막 부분에 아래 내용을 추가2Match User some-user-name3 ChrootDirectory /some/path/4 ForceCommand internal-sftp5 x11Forwarding no ssh 서비스 재시작1$ sudo service ssh restart 제한사항 소유자는 root여야한다 root 이외의 사용자가 접속 ‘/‘경로에 쓰기권한이 있으면 접속이 안된다 ‘/‘ 경로에 쓰기 권한이 없으니 접속 사용자는 파일업로드가 불가능하다. 접속자 소유의 하위 폴더를 만들어 줘야한다.1$ sudo chown root:some-group /some/path2$ chmod 755 /some/path 참고https://zetawiki.com/wiki/SFTP%EB%A7%8C_%EB%90%98%EB%8A%94_%EA%B3%84%EC%A0%95_%EC%83%9D%EC%84%B1","categories":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/tags/linux/"}]},{"title":"linux-User","slug":"linux-User","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.759Z","comments":true,"path":"2019/12/04/linux-User/","link":"","permalink":"https://jungeol.github.io/2019/12/04/linux-User/","excerpt":"","text":"User유저 추가1# Create a user2$ sudo adduser your-user-name3# Grant uper user permission4$ sudo usermod -G sudo your-user-name 그룹 추가1# Enter prefer group name2$ sudo groupadd your-group-name 유저를 그룹에 추가1$ sudo usermod -a -G your-group-name your-user-name User Listusername 리스트1$ cut -d: -f1 /etc/passwd group 리스트1$ cut -d: -f1 /etc/group 그룹 내 사용자 리스트1$ getent group 그룹이름","categories":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/tags/linux/"}]},{"title":"javascript-sort","slug":"javascript-sort","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.757Z","comments":true,"path":"2019/12/04/javascript-sort/","link":"","permalink":"https://jungeol.github.io/2019/12/04/javascript-sort/","excerpt":"","text":"JavaScript SortNotes Javascript’s sort function is basically sorted by string(even if the value is a number).1var arr &#x3D; [2,12,3,4,1];2console.log(arr.sort());3&#x2F;&#x2F; [1, 12, 2, 3, 4] Target Array is sorted in place, and return value is target Array.1var arr &#x3D; [4,5,1,3,2];2arr.sort();3console.log(arr);4&#x2F;&#x2F; [1, 2, 3, 4, 5] String Sort 1var arr &#x3D; [&quot;a&quot;, &quot;c&quot;, &quot;b&quot;];2&#x2F;&#x2F;ASC 오름차순3arr.sort();4arr.sort(function (a, b) &#123; 5 return a &lt; b ? -1 : a &gt; b ? 1 : 0; 6&#125;);78&#x2F;&#x2F;DESC 내림차순9arr.sort().reverse();10arr.sort(function (a, b) &#123;11 return a &gt; b ? -1 : a &lt; b : 1 : 0;12&#125;); Number Sort1var arr &#x3D; [2,1,4,5,3]2&#x2F;&#x2F;ASC3arr.sort(function (a, b) &#123;4 return a - b;5&#125;);6&#x2F;&#x2F;DESC7arr.sort(function (a, b) &#123;8 return b - a;9&#125;); JavaScript’s Date object 1var arr &#x3D; [2 new Date(&quot;2018-02-02&quot;),3 new Date(&quot;2018-01-11&quot;),4 new Date(&quot;2018-04-11&quot;),5 new Date(&quot;2018-05-30&quot;),6 new Date(&quot;2018-01-23&quot;),7];8&#x2F;&#x2F; ASC9arr.sort(function (a, b) &#123;10 return a - b;11&#125;);12&#x2F;&#x2F; DESC13arr.sort(function (a, b) &#123;14 return b - a;15&#125;); Sort by multiple value1var arr &#x3D; [2 &#123;str: &quot;a&quot;, num: &quot;3&quot;&#125;,3 &#123;str: &quot;b&quot;, num: &quot;2&quot;&#125;,4 &#123;str: &quot;a&quot;, num: &quot;1&quot;&#125;,5 &#123;str: &quot;a&quot;, num: &quot;2&quot;&#125;,6 &#123;str: &quot;b&quot;, num: &quot;1&quot;&#125;,7 &#123;str: &quot;a&quot;, num: &quot;3&quot;&#125;8];910arr.sort(function (a, b) &#123;11 &#x2F;&#x2F;&#39;str&#39; parameter sotred by asc12 var b1 &#x3D; a.str &lt; b.str ? -1 : a.str &gt; b.str ? 1 : 0;13 &#x2F;&#x2F;&#39;num&#39; parameter sotred by desc14 var b2 &#x3D; b.num - a.num15 &#x2F;&#x2F;&#39;b1&#39; option is sorted first.16 return b1 || b2;17&#125;);1819console.log(arr);20&#x2F;&#x2F; [ &#123; str: &#39;a&#39;, num: &#39;3&#39; &#125;,21&#x2F;&#x2F; &#123; str: &#39;a&#39;, num: &#39;3&#39; &#125;,22&#x2F;&#x2F; &#123; str: &#39;a&#39;, num: &#39;2&#39; &#125;,23&#x2F;&#x2F; &#123; str: &#39;a&#39;, num: &#39;1&#39; &#125;,24&#x2F;&#x2F; &#123; str: &#39;b&#39;, num: &#39;2&#39; &#125;,25&#x2F;&#x2F; &#123; str: &#39;b&#39;, num: &#39;1&#39; &#125; ]","categories":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://jungeol.github.io/tags/javascript/"}]},{"title":"linux-basic","slug":"linux-basic","date":"2019-12-04T12:40:29.000Z","updated":"2020-01-29T09:12:51.197Z","comments":true,"path":"2019/12/04/linux-basic/","link":"","permalink":"https://jungeol.github.io/2019/12/04/linux-basic/","excerpt":"","text":"Ubuntu Basicfile system 용량1$ df -h --total -h: 용량 요약표기(GB, MB) –total: 모든 용량 표시","categories":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://jungeol.github.io/tags/linux/"}]},{"title":"markdown-markdown_basic","slug":"markdown-markdown_basic","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.762Z","comments":true,"path":"2019/12/04/markdown-markdown_basic/","link":"","permalink":"https://jungeol.github.io/2019/12/04/markdown-markdown_basic/","excerpt":"","text":"1. Markdown BasicHeader1# H12## H23### H34#### H45##### H56###### H6 H1H2H3H4H5H6 Block1&gt;12&gt;&gt;23&gt;&gt;&gt;3 1 2 3 Number list11. First23. Third32. Second First Third Second List1# *, +. - is same.2- 13 - 24 - 3 1 2 3 Hr1* * *2***3******4- - -5--------------------- … etc","categories":[{"name":"markdown","slug":"markdown","permalink":"https://jungeol.github.io/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://jungeol.github.io/tags/markdown/"}]},{"title":"nodejs-babel","slug":"nodejs-babel","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.763Z","comments":true,"path":"2019/12/04/nodejs-babel/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-babel/","excerpt":"","text":"babel바벨 프리셋바벨 6은 처리할 수 있는 변환의 종류를 프리셋(preset)으로 나눴다.개발자는 사용할 프리셋을 지정하여 바벨이 처리할 변환의 종류를 명확히 정의 할 수 있다. babel-preset-es2015 ES2015(ES6)를 ES5로 컴파일 한다. babel-preset-es2016 ES2016을 ES2015로 컴파일 한다. babel-preset-es2017 ES2016을 ES2016으로 컴파일 한다. babel-preset-env ES2015, ES2016, ES2017 -&gt; ES5 앞의 세 프리셋을 합친 것 babel-preset-react JSX를 React.createElement 호출로 변경해준다. ECMAScript 수용단계를 정할 수 있다. Strawman(실험단계): babel-preset-stage-0 Proposal(제안): babel-preset-stage-1 Draft(초안): babel-preset-stage-2 Candidate(후보): babel-preset-stage-3install1$ npm install --global babel-cli babel-preset-2015 using options -o: file out -w: watch -d: directory –compact=true: code compact –source-maps: source map, {filename}.map file created1$ babel test.js -o test.out.js2$ babel src -d dest3src&#x2F;a.js -&gt; dest&#x2F;a.js4src&#x2F;b.js -&gt; dest&#x2F;b.js","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-basic","slug":"nodejs-basic","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.764Z","comments":true,"path":"2019/12/04/nodejs-basic/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-basic/","excerpt":"","text":"nodejsnpmpackage.json1&#123;2 &quot;name&quot;: &quot;project-name&quot;,3 &quot;author&quot;: &quot;your name&quot;,4 &quot;private&quot;: true,5 &quot;dependencies&quot;: &#123;&#125;,6 &quot;devDependencies&quot;: &#123;&#125;,7 &quot;scripts&quot;: &#123;8 &quot;start&quot;: &quot;node app&quot;,9 &#125;10&#125; run scripts1$ npm run start install module1# install global: -g2$ npm install &#123;&#123;module-name&#125;&#125; --global3# install local and auto save package.json dependenties.4$ npm install &#123;&#123;module-name&#125;&#125; --save5# install development only6$ npm install &#123;&#123;module-name&#125;&#125; --save-dev install specific version1# install v42$ npm install lodash@43# install v4.x.x4$ npm install lodash@^4.0.05# install v4.17.46$ npm install lodash@4.17.4 use installed module1# use module2var iModule &#x3D; require(&quot;module-name&quot;); user moduleexports./random_integer.js 1var MAX &#x3D; 100;23function randomInteger() &#123;4 return Math.floor(Math.random() * max);5&#125;67module.exports &#x3D; randomInteger;8&#x2F;&#x2F;exports only one (function, array, object, string, ...) use1var randomInt &#x3D; require(&quot;.&#x2F;random-integer&quot;);2console.log(randomInt()); nodemon1# install2$ npm install nodemon --global3# run4$ nodemon index.js run code by commandline1&#x2F;&#x2F;in browser no require2if (typeof require !&#x3D;&#x3D; &#39;undefined&#39; &amp;&amp; require.main &#x3D;&#x3D;&#x3D; module) &#123;3 let parameter &#x3D; process.argv.slice(2)4&#125;","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-express-modules","slug":"nodejs-express-modules","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.766Z","comments":true,"path":"2019/12/04/nodejs-express-modules/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-express-modules/","excerpt":"","text":"Express ModulesExpress 유용한 모듈 body-parserPOST 데이터 파싱 https://github.com/expressjs/body-parser Express/Connect top-level generic1var express &#x3D; require(&#39;express&#39;)2var bodyParser &#x3D; require(&#39;body-parser&#39;)34var app &#x3D; express()56&#x2F;&#x2F; parse application&#x2F;x-www-form-urlencoded7app.use(bodyParser.urlencoded(&#123; extended: false &#125;))89&#x2F;&#x2F; parse application&#x2F;json10app.use(bodyParser.json())1112app.use(function (req, res) &#123;13 res.setHeader(&#39;Content-Type&#39;, &#39;text&#x2F;plain&#39;)14 res.write(&#39;you posted:\\n&#39;)15 res.end(JSON.stringify(req.body, null, 2))16&#125;) Express route-specific1var express &#x3D; require(&#39;express&#39;)2var bodyParser &#x3D; require(&#39;body-parser&#39;)34var app &#x3D; express()56&#x2F;&#x2F; create application&#x2F;json parser7var jsonParser &#x3D; bodyParser.json()89&#x2F;&#x2F; create application&#x2F;x-www-form-urlencoded parser10var urlencodedParser &#x3D; bodyParser.urlencoded(&#123; extended: false &#125;)1112&#x2F;&#x2F; POST &#x2F;login gets urlencoded bodies13app.post(&#39;&#x2F;login&#39;, urlencodedParser, function (req, res) &#123;14 res.send(&#39;welcome, &#39; + req.body.username)15&#125;)1617&#x2F;&#x2F; POST &#x2F;api&#x2F;users gets JSON bodies18app.post(&#39;&#x2F;api&#x2F;users&#39;, jsonParser, function (req, res) &#123;19 &#x2F;&#x2F; create user in req.body20&#125;) Change accepted type for parsers1var express &#x3D; require(&#39;express&#39;)2var bodyParser &#x3D; require(&#39;body-parser&#39;)34var app &#x3D; express()56&#x2F;&#x2F; parse various different custom JSON types as JSON7app.use(bodyParser.json(&#123; type: &#39;application&#x2F;*+json&#39; &#125;))89&#x2F;&#x2F; parse some custom thing into a Buffer10app.use(bodyParser.raw(&#123; type: &#39;application&#x2F;vnd.custom-type&#39; &#125;))1112&#x2F;&#x2F; parse an HTML body into a string13app.use(bodyParser.text(&#123; type: &#39;text&#x2F;html&#39; &#125;))","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-http_status","slug":"nodejs-http_status","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.769Z","comments":true,"path":"2019/12/04/nodejs-http_status/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-http_status/","excerpt":"","text":"HTTP Status요약 1xx: 끊지 마, 아직 처리중이야. 2xx: 자, 여기 있어! 3xx: 잘 가~ 4xx: 네게 문제가 있음 5xx: 내게 문제가 있음자세히 100 범위 100: 계속 101: 프로토콜 전환 200 범위 200: 성공(OK) 201: 작성됨(CREATED) 202: 허용됨(ACCEPTED) 204: 콘텐츠 없음(NO CONTENT) 300 범위 301: 영구적으로 이동됨(MOVED PERMANENBTLY) 303: 기타 위치 확인(SEE OTHER) 307: 임시 리디렉션(TEMPORARY REDIRECT) 400 범위 401: 권한없음(UNAUTHORIZED) 403: 금지됨(FORBIDDEN ERRORS) 404: 찾을 수 없음(NOT FOUND) 500 범위 500: 내부 서버 오류(SERVER ERROR)","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-express","slug":"nodejs-express","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.767Z","comments":true,"path":"2019/12/04/nodejs-express/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-express/","excerpt":"","text":"Expresshello world1var express &#x3D; require(&quot;express&quot;);2var http &#x3D; require(&quot;http&quot;);34var app &#x3D; express();56&#x2F;&#x2F;middle ware 17app.use(function (request, response) &#123;8 console.log(&quot;In comes a request to: &quot; + request.url);9 response.end(&quot;Hello World!&quot;);10&#125;);11&#x2F;&#x2F;middle ware 212...13&#x2F;&#x2F;middle ware 314...1516http.createServer(app).listen(3000);17&#x2F;&#x2F;same as app.listen(3000); middlewarebasic 1app.use(function (req, res, next) &#123;2 ...3 next();4&#125;); error 1app.use(function (err, req, res, next) &#123;2 ...3 next();4&#125;); third party middlewarelogger1...2var logger &#x3D; require(&quot;morgan&quot;);3app.use(logger(&quot;short&quot;);4... express.static1...2var path &#x3D; require(&quot;path&quot;);3var publicPath &#x3D; path.resolve(__dirname, &quot;public&quot;);4app.use(express.static(publicPath));5... etc connect-ratelimit 시간당 특정 요청수 연결 조절 Helmet http 헤더를 추가해 앱을 특정 종류의 공격으로부터 더 안전하게 cookie-parser 브라우저 쿠키 분석 response-time X-Response-Time 헤더를 전송, 애플리케이션의 성능 디버깅 가능 body-parser 양식 제출할때 사용 등 compression 바이트를 줄이기위해 응답 압축 connect-assets CSS와 자바스크립트 자산을 컴파일하고 줄임 SASS, LESS, Stylus 등의 CSS 전처리기와 동작routerbasic1...2&#x2F;&#x2F;basic3app.get(&quot;&#x2F;about&quot;, function (request, response) &#123;4 response.end(&quot;about&quot;);5&#125;);6&#x2F;&#x2F;get variable, but not good7app.get(&quot;&#x2F;hello&#x2F;:who&quot;, function (request, response) &#123;8 response.end(&quot;Hello, &quot; + request.params.who + &quot;!&quot;);9&#125;);10&#x2F;&#x2F;regex pattern and get variable11app.get(&#x2F;^\\&#x2F;users\\&#x2F;(\\d+)$&#x2F;, function (req, res) &#123;12 var userId &#x3D; parseInt(req.params[0], 10);13 ...14&#125;);15&#x2F;&#x2F;get query16app.get(&quot;&#x2F;search&quot;, function (req, res) &#123;17 var b &#x3D; req.query.q &#x3D;&#x3D; &quot;something like that&quot;;18&#125;);19... routesapp.js1var express &#x3D; require(&quot;express&quot;);2var apiRouter &#x3D; require(&quot;.&#x2F;routes&#x2F;api_router&quot;);34var app &#x3D; express();56app.use(&quot;&#x2F;api&quot;, apiRouter);78app.listen(3000); ./routes/api_router.js1var express &#x3D; require(&quot;express&quot;);23var api &#x3D; express.Router();4api.use(function (req, res, next) &#123;5 ...6 next();7&#125;);8api.get(&quot;&#x2F;users&quot;, function (req, res) &#123; ... &#125;);9api.post(&quot;&#x2F;users&quot;, function (req, res) &#123; ... &#125;);10api.get(&quot;&#x2F;messages&quot;, function (req, res) &#123; ... &#125;);11api.post(&quot;&#x2F;messages&quot;, function (req, res) &#123; ... &#125;);1213module.exports &#x3D; api; response extendredirect1response.redirect(&quot;&#x2F;some&#x2F;path&quot;);2response.redirect(&quot;http:&#x2F;&#x2F;www.google.com&#x2F;&quot;); sendFile1response.sendFile(&quot;&#x2F;path&#x2F;to&#x2F;some_file.txt&quot;); json1response.json(&#123; result: &quot;blabla&quot; &#125;); crud1app.get(&quot;&#x2F;&quot;, function (req, res) &#123; ... &#125;);2app.post(&quot;&#x2F;&quot;, function (req, res) &#123; ... &#125;);3app.put(&quot;&#x2F;&quot;, function (req, res) &#123; ... &#125;);4app.delete(&quot;&#x2F;&quot;, function (req, res) &#123; ... &#125;); send1app.send(&quot;message&quot;); ejs viewEjs view setup1var express &#x3D; require(&quot;express&quot;);2var path &#x3D; require(&quot;path&quot;);34var app &#x3D; express();56&#x2F;&#x2F;view files in .&#x2F;views7app.set(&quot;views&quot;, path.resolve(__dirname, &quot;views));8&#x2F;&#x2F;set use ejs9app.set(&quot;view engine&quot;, &quot;ejs&quot;); ./views/footer.ejs1&lt;&#x2F;body&gt;2&lt;&#x2F;html&gt; ./views/index.ejs1&lt;!DOCUMENT html&gt;2&lt;html&gt;3 &lt;head&gt;4 &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;5 &lt;title&gt;Hello, world!&lt;&#x2F;title&gt;6 &lt;&#x2F;head&gt;7&lt;body&gt;8&lt;%&#x3D; message &#x3D;%&gt;9&lt;% include footer %&gt; View render1app.get(&quot;&#x2F;&quot;, function (req, res) &#123;2 response.render(&quot;index&quot;, &#123;3 message: &quot;Hello World!&quot;4 &#125;);5&#125;);","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-react","slug":"nodejs-react","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.770Z","comments":true,"path":"2019/12/04/nodejs-react/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-react/","excerpt":"","text":"reactjsx기존 방식과 비교 1// 리액트 엘리먼트2React.createElement(ElementName, &#123;list:[...]&#125;)3// JSX4&lt;Elementname list=&#123;[...]&#125;/&gt; className 1// class는 javascript의 예약어 이므로 calssName을 쓴다2&lt;h1 className=\"someClass\"&gt;some content&lt;/h1&gt; 자바스크립트 식 1// 중괄호 안에서 자바스크립트 식을 쓸 수 있음2&lt;h1&gt;&#123;this.props.name&#125;&lt;/h1&gt;3// 문자열이 아닌 다른 타입의 값도 자바스크립트 식안에 넣어야함4&lt;input type=\"checkbox\" defaultChecked=&#123;false&#125;&gt; 프로퍼티 검증리액트에는 자동 프로퍼티 검증 기능이 있었는데15.5 부터는 React.PropTypes가 별도의 패키지로 분리되었다 1# 패키지 설치2$ npm install --save prop-types 사용법 1const Summary = createClass(&#123;2 displayname: 'Summaray',3 // 프로퍼티 타입 지정4 propTypes: &#123;5 name: PropTypes.string,6 //필수값7 list: PropTypes.array.isRequired,8 //커스텀 검증기9 title: (props, propName) =&gt; 10 (typeof props[propName] !== 'string') ?11 new Error(\"title은 문자열이어야 합니다.\") :12 (props[propName].length &gt; 20) ?13 new Error(\"제목은 20자 이내여야 합니다.\") :14 null15 &#125;,16 // 값이 없을때 초기화17 getDefaultProps() &#123;18 return &#123;19 name: 'noname',20 list: []21 &#125;22 &#125;23 render() &#123;24 //...25 &#125;26&#125;) ES6 클래스 or 상태없는 함수형 컴포넌트 1class Summary extends React.Component&#123;...&#125;2// const Summary = (...) =&gt; &#123;...&#125;3Summary.propTypes = &#123;...&#125;4Summary.defaultProps = &#123;...&#125;","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-test","slug":"nodejs-test","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.772Z","comments":true,"path":"2019/12/04/nodejs-test/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-test/","excerpt":"","text":"unit Test코드검사 동료검토 Code linter 코드검사(Code Coverage) Istanbul: 코드의 어떤부분이 테스트로 다뤄지지 않았는지 검사 Chai: assrtion 라이브러리 Mocha: 테스트 레이아웃 라이브러리Mochainstall1$ npm install --save mocha run11$ node node_modules&#x2F;.bin&#x2F;mocha run21&#x2F;&#x2F;package.json2&#123;3 ...4 &quot;scripts&quot;: &#123;5 &quot;test&quot;: &quot;mocha&quot;6 &#125;,7 ...8&#125; 1$ npm test Chai + Mochainstall1$ npm install --save chai useage run ./test/*.js1var module &#x3D; require(&quot;..&#x2F;module&quot;);23var chai &#x3D; require(&quot;chai&quot;);4var expect &#x3D; char.expect;56describe(&quot;module&quot;, function () &#123;7 it(&quot;test name 1&quot;, function () &#123;8 expect(module(&quot;variables1&quot;, ...)).to.equal(&quot;expectedValue1&quot;);9 ...10 &#125;);11 it(&quot;test name 2&quot;, function () &#123;12 expect(module(&quot;variables2&quot;, ...)).to.euqal(&quot;expectedValue2&quot;);13 ...14 &#125;);15 ...16&#125;); mocha before each1describe(&quot;User&quot;, function () &#123;2 var user;3 beforeEach(function () &#123;4 user &#x3D; new User(&#123;5 firstName: &quot;fname&quot;,6 lastName: &quot;lname&quot;7 &#125;);8 &#125;);910 it(&quot;something&quot;, function () &#123;11 expect(user.getName()).to.equal(&quot;fname lname&quot;);12 &#125;);13 &#x2F;&#x2F;...14&#125;) error test1&#x2F;&#x2F;...2it(&quot;throws an error&quot;, function() &#123;3 expect(function() &#123; capitalize(123); &#125;).to.throw(Error);4&#125;);5&#x2F;&#x2F;... not1&#x2F;&#x2F;...2if(&quot;changes the value&quot;, function () &#123;3 expect(capitalize(&quot;foo&quot;)).not.to.expect(&quot;foo&quot;);4&#125;);5&#x2F;&#x2F;... EndPoint Test","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"nodejs-webpack","slug":"nodejs-webpack","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.774Z","comments":true,"path":"2019/12/04/nodejs-webpack/","link":"","permalink":"https://jungeol.github.io/2019/12/04/nodejs-webpack/","excerpt":"","text":"webpack모듈 번들러 install1$ npm install -g webpack set env1$ npm install babel-core babel-loader babel-preset-env babel-preset-react babel-preset-stage-0 --save-dev2$ npm install react react-dom --save set configindex.js가 있는 프로젝트의 루트 폴더에 이 파일을 만들어야 한다.example 1# webpack.config.js2const path &#x3D; require(&#39;path&#39;)3module.exports &#x3D; &#123;4 &#x2F;&#x2F; mode: development, production, none5 mode: &#39;none&#39;,6 &#x2F;&#x2F; 클라이언트의 시작파일을 지정 모든 의존관계 트리를 자동으로 빌드해준다.7 entry: &quot;.&#x2F;src&#x2F;index.js&quot;, 8 &#x2F;&#x2F; dist&#x2F;assets&#x2F;bundle.js라는 자바스크립트 파일에 출력하라고 지정9 output: &#123; 10 path: path.join(__dirname, &quot;dist&#x2F;assets&quot;),11 filename: &quot;bundle.js&quot;12 &#125;,13 module: &#123;14 &#x2F;&#x2F; 모듈에 따라 실행히야 하는 로더의 룰을 구성15 rules: [16 &#123;17 &#x2F;&#x2F; 처리해야할 파일의 정규식18 test: &#x2F;\\.js$&#x2F;,19 &#x2F;&#x2F; 제외할 정규식20 exclude: &#x2F;(node_modules)&#x2F;,21 loader: &#39;babel-loader&#39;,22 query: &#123;23 presets: [&#39;env&#39;, &#39;stage-0&#39;, &#39;react&#39;]24 &#125;25 &#125;26 ]27 &#125;28&#125; run웹팩은 정적으로 실행된다.보통 앱을 서버에 배포하기 전에 번들을 만든다. 1$ webpack modemode: development, production, none in config1module.exports &#x3D; &#123;2 mode: &#39;production&#39;3&#125;; pass by CLI1webpack --mode&#x3D;production source map 1const path &#x3D; require(&#39;path&#39;)23module.exports &#x3D; &#123;4 mode: &#39;production&#39;,5 entry: &quot;.&#x2F;src&#x2F;index.js&quot;,6 output: &#123;7 path: path.join(__dirname, &quot;dist&#x2F;assets&quot;),8 filename: &quot;bundle.js&quot;,9 &#x2F;&#x2F; 소스 맵 이릅10 sourceMapFilename: &#39;bundle.map&#39;11 &#125;,12 &#x2F;&#x2F;소스 맵 사용13 devtool: &#39;#source-map&#39;,14 module: &#123;15 rules: [16 &#123;17 test: &#x2F;\\.js$&#x2F;,18 exclude: &#x2F;(node_modules)&#x2F;,19 loader: &#39;babel-loader&#39;,20 query: &#123;21 presets: [&#39;env&#39;, &#39;stage-0&#39;, &#39;react&#39;]22 &#125;23 &#125;24 ]25 &#125;26&#125;","categories":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://jungeol.github.io/tags/nodejs/"}]},{"title":"seminar-devfest2018.01","slug":"seminar-devfest2018.01","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.775Z","comments":true,"path":"2019/12/04/seminar-devfest2018.01/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-devfest2018.01/","excerpt":"","text":"GCP를 활용하여 코딩없이 앱 서비스 분석 인프라 구축한 삽질기전인아 inahjeon5324@gmail.com 뱅크샐러드 개인 자산관리 서비스기술 파이어베이스퍼널분석 각 단계별 이탈율 단계별로 이탈율을 분석하여 개선기능 개선 파이어베이스로는 데이터분석의 대응에 한계가 있다. 자주 보는 중요한 지표는 자동화 하자. Raw Data는 BigQuery에 연결이 가능하다 Bigquey를 데이터 웨어하우스로 두고 사용개선방법 요금제를 업그레이드 한다 BigQuery로 데이터 내보내기 버튼을 누른다장점 다운로드 수, 유입, 리뷰 통계데이터중요하고 자주보는 데이터는 대시보드 Google Data Studio룰 사용했음데이터 인프라 완성 비용 쿼리 스캔 비용이 어마어마함비용 분석 하루 로그데이터 15GB BigQuery 데이터 2TB 적재중 -&gt; 풀스캔: 10달러 DawtaStudio 신나게 제한없이 스캔중비용 문제 해결 매번 전체데이터를 스캔하지 않고, 전처리된 중간 테이블을 하루 단위로 만들어두자 데이터를 번형할 파이프라인 Data Prep: 전처리할 동작으 정의 Data Flow: 데이터 전처리 수행Data Prep Data 소스 -&gt; 전처리동작 -&gt; 목적지 코딩이 필요없고, 단순 엑셀 작업 정도의 난이도 스케줄링이 가능 Data Flow 실제로 돌아가는 서비스 현재는 BigQuery에 쿼리 스케줄링 기능이 있어서 더욱 쉽게 가능성과 하루 200300$ -&gt; 2025$분석 인프라 데이터 엔지니어가 필요 레이니스트 채용중임질문 머신러닝 사용하는가: X, 간단한 통계치만 함","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-devfest2018.02","slug":"seminar-devfest2018.02","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.777Z","comments":true,"path":"2019/12/04/seminar-devfest2018.02/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-devfest2018.02/","excerpt":"","text":"실전 SPA상태관리 톺아보기김동우 SPA 승자는 React? React가 Vue보다 수익이 높은 편State Management가 필요 React: Redux, MobX Vue: 전용이 있으나 위도 사용 가능Redux 다양한 환경 테스트하기 쉬움 sate관리하기 위한 거대한 이벤트 루프미들웨어 redux-thunk: 비동기를 위한 redux-saga: 사이드 이펙트를 이용한 데이터가 강점인 미들웨어 redux-observable:redux-thunk 쉽지만 나쁘게 코딩하기 쉬움 테스트 디버깅 어려움 스파게티 코드가 되기 쉬움 발표자는 추천하지 않음Redux-saga 사이트 이펙트를 사용한 Data ochestration 미들웨어 중앙에서 액션을 보고있다가 사이드이펙트를 발생시켜 데이터 제어 시작 비동기를 동기 코드 처럼 테스트하기 좋음 복잡한 데이터 처리에 좋음 ES6 제네레이터를 사용 장점 일관된 비동기 처리제어로 앱의 데이터 흐름이 견고 여러가지 작업을 처리하기 수월 단점 배우는 과정이 고난 액션을 작성하는데 더 많은 코드가 필요React Context API 리액트에 최근(16.3) 추가된 Context를 쉽게 생성할 수 있는 API Redux 없이도 간단하게 State Management 가능 장점 간단하게 적용이 가능(Redux 안써도 됨) 단점 스토어가 쉽게 비대해지는데 분리가 어렵 항상 모든 컴포넌트가 다시 랜더링 됨(성능-)Mobx Simple, scalble state management functional reactive programming 개념적으로 어플리케이션 = 스프레드시트 학습비용이 낮음 장점 코드가 간단해서 이해하기 쉽고 생산성이 좋음 비동기 액션을 만들기 쉬움 단점 디버깅하기 어려움 React 라이프사이클과 혼합하여 사용하기 어려움(mobex만 사용하는게 좋음)Redux vs mobx Redux가 압승MobX-state-tree model Driven State Management 복잡한 데이터를 다루는 앱에 적합 vs code 동시 코딩하는 기능 장점 관계가 복잡한 데이터를 다루는데 수월 견구하고 버그가 저근 개발이 가능(with typescript) 단점 모델 작성하는 것이 학습비용도 크고 까다로움 이렇게깢 견고해야하나 고민하게됨결론 Redux -가장 일반적인 경우 saga를 추천 comtxt api 간단한 앱에 적합 추가합습비용0 mobx 높은 생산성 제공 적정 엔지니어링을 고려 오버엔지니어링을 경계해야함 해결 문제, 팀의 현재 수수준, 사용할 수 있는 자원 Redux와 Mobx는 완전히 코드가 상이 Bonus React state museum 여러가지 스테이트로 같은 어플 개발 샌드박스로 바로 확인 가능 주식회사 체커","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-devfest2018.04","slug":"seminar-devfest2018.04","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.780Z","comments":true,"path":"2019/12/04/seminar-devfest2018.04/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-devfest2018.04/","excerpt":"","text":"TenserFlow on Backend Ai조만석 hephaex@gmail.com 인공신경망: 뇌의 생체모방단계 데이터 수집 가공 데이터로 학습 학습된 모델로 실제 서비스 일단 학습을 시키면 학습된 데이터를 가지고 사용이 쉽다텐서플로우케라스 케라스를 공부하면 텐서플로우도 쓰는 것 ML 오픈소스는 텐서플로우와 케라스가 대세직접 해봐야함 최대한 간단하게 할 수 있는것Backend.AI 설치 + jupyter케라스머신러닝 관련 공부할때 참고 케라스 맛보기(책) 케라스 관련 동영상 google colab https://codeonweb.com/entry/12045839-0aa9-4bad-8c7e-336b89401e10?course=7e8c4944-308e-410e-85aa-644624613741 텐서플로우, 케라스 튜토리얼","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-devfest2018.05","slug":"seminar-devfest2018.05","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.782Z","comments":true,"path":"2019/12/04/seminar-devfest2018.05/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-devfest2018.05/","excerpt":"","text":"크로미움/블링크크로미움 소스코드만 13GB 빌드시간 3시간프로세스 구성process vs thread process: 메모리공간 독립적 thread: 메모리 공간 공유process 를 사용하는 이유 하나가 죽어도 safe 함 Site isolation 사이트별로 메모리 접근을 차단하여 보안성 높임프로세스 구성 Browser Process 외부와 소통(ex 시스템 콜) Renderer Process 웹컨텐츠 담당blink renderingRendering Engineblik 엔진 렌더링 과정 Paring html을 파싱하여 dom tree를 만듬 Style Css Parsing 스타일 결과를 글로벌하게 맵핑 Style Recalc Style Update: DOM Tree 생성 후에 일어남 Layout 화면에 표시 될 Object를 결정 Layout Tree를 생성 어떤 위치에 어떤 사이즈로 배치할지를 결정 reflow 과정이라고 부름 Lyerization z-index 같은 실제 그리는 순서 결정 Stacking order(z-index) Paint Layer 생성 Paint 그래픽 라이브러리로 실제로 그림off-main thread rendering 지금까지 살펴본 렌더링은 모두 MainThread에서 일어남 V-Sync Timeline main thread를 사용하면 프레임 드랍이 일어남프레임 드랍없이 작성하려면 Threaded compositing GPU 가속 최근 브라우저들은 gpu 가속을 사용함 OpenGL을 사용(직접 인터페이스를 구현했음) 장점 각종변환(transformation)을 빠르게 할 수 있다 텍스처를 빠르게 합성할 수 있다 Compositing 병렬로 그려서 한번의 이미지로 합치는 작업 GPU Compositing 이미지를 gpu 메모리에 캐싱해뒀다가 필요할때 그리는것 일단 gpu 메모리에 업로드 되면, 합성하거나 변환하는건 굉장히 빠르게 처리 할 수 있다. 장점2 Graphics Primitive들을 빠르게 그릴 수 있다. gpu resterization gpu 메모리를 직접 접근하게 해서 일반적인것보다 40배 빠름내용 csstriggers.com css가 퍼포먼스에 어떤 영향을 주는지Javascript EngineGraphics Library","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-devfest2018.03","slug":"seminar-devfest2018.03","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.778Z","comments":true,"path":"2019/12/04/seminar-devfest2018.03/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-devfest2018.03/","excerpt":"","text":"PWA로딩시간 tti: 5초 이하 나머지 로드: 2초 이하SPA 장점이 많지만 초기구동속도가 느림퍼포먼스 자바스크립트 170kb jpg 170kb 두가지는 많은 차이가있음tti 줄이기 배포과정을 최적화 PRPL Pattern: 웹앱을 배포할때 ux를 최적화하는것 PWA로 만듬PRPL 패턴 완벽하게 맞추기엔 생태계가 덜 발전함Dinamic Code splitting + lazy loading Route-based bundle React-Loadable 라이브러리 pre-loading Minfy + Compress -Minify: webpack, uglify -compress: gzipChrome Aduit 로드 퍼포먼스 체크Server Side Rendering Isomorphic(Universial) Web AppNext.js PWA Workbox: 구글에서 발표한 PWA용 라이브러리최적화 웹팩 관련이 50% 이상","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf01.미국개발자vs한국개발자","slug":"seminar-feconf01.미국개발자vs한국개발자","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.784Z","comments":true,"path":"2019/12/04/seminar-feconf01.미국개발자vs한국개발자/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf01.%EB%AF%B8%EA%B5%AD%EA%B0%9C%EB%B0%9C%EC%9E%90vs%ED%95%9C%EA%B5%AD%EA%B0%9C%EB%B0%9C%EC%9E%90/","excerpt":"","text":"미국개발자 vs 한국개발자ken Huh(아마존) -&gt; 질문있으면 Ken Huh 친추 개발자에게 중요한 것? 개발능력 개발능력은 비슷하나 영어능력이 차이 미국은 시스템을 기반으로 보완하는 체계협업책임감이 뛰어나고 타인의 부분에 영향이 가는부부을 민감하게 감지하고 만약 그렇다면 긴밀하게 의사소통 하는 사람 협업이 안되면 자기 자신이 잘못하고있고 고쳐야한다. Individual Mindset 수동적으로 시키는일만 하지 말기 개인이 도덕성과 책임감을 가지고 사용자의 입장에서 생각해보기 본인의 생각을 어필해야함","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf02reduxsaga","slug":"seminar-feconf02reduxsaga","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.785Z","comments":true,"path":"2019/12/04/seminar-feconf02reduxsaga/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf02reduxsaga/","excerpt":"","text":"Redux-SagaWhy Redux-Saga 관리하기 쉽고 테스트 쉽고 적당한 패턴으로 서비스 로직을 쉽게 만들수 있음 비동기 라이브러리 중 가장 핫함 Concept React: View Redux: Redux-Saga:Saga란 side effects 만 관리하는 라이브러리 Generator function과 콘셉트가 같다고 보면 됨한글번역이 있음","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf03","slug":"seminar-feconf03","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.786Z","comments":true,"path":"2019/12/04/seminar-feconf03/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf03/","excerpt":"","text":"ReactComponent와 D3 Object를 유기적으로 연결하는 전략박승현 eldeniyenden@gmaileldeni.github.io SVG 캔바스보다 느림 다루기 쉽고 확대해도 잘보임chart 라이브러리 chart.js c3.js rechars.js: 확장이 어려움 *d3.js: dom레벨, 큰 커뮤니티언제 선택을 하는가 데이터 시각화를 하고싶은데 특별하게 할때 리액트나 앵귤러같은 제3에 기대지 않는것 dom조작을 해봤다면 더 좋음리액트 Webapp에 d3를 바인딩 돔조작 컨플릭트가 남 리액트 상태관리시 계속 로드되면서 퍼포먼스 저하가 발생함두가지 해결방법 리액트가 전부다 관할을 하게 -D3는 수학적 계산만함 각각의 파트를 관리하는 방법 리액트는 div까지만 랜더링 D3는 수학계산과 dom조작 까지선택한벙법2번으로 선택함 디버깅하기 쉬웠고 리액트없이 사용가능 d3샘플이 많다dechart.js -&gt; github요약 둘다 돔을 다루지만 같이 다룰수 있다 가능하다면 분리해야한다끝eldeni.github.io","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf04","slug":"seminar-feconf04","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.788Z","comments":true,"path":"2019/12/04/seminar-feconf04/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf04/","excerpt":"","text":"한편의 애니메이션 같은 CSSNaver 회연규","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf04polifill","slug":"seminar-feconf04polifill","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.790Z","comments":true,"path":"2019/12/04/seminar-feconf04polifill/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf04polifill/","excerpt":"","text":"folyfill레진엔터 what 바벨을 많이 씀 code Trasform &amp; folyfill중요한점컴파일된 바벨코드 앞에서 사용해야함효율적인 방법폴리필 브라우저를 확인해 유저단에서 필요한 폴리필만 확인하여 전달하는 역할을함","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-feconf06","slug":"seminar-feconf06","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.791Z","comments":true,"path":"2019/12/04/seminar-feconf06/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-feconf06/","excerpt":"","text":"From jQuery To React쏟아지는 업무를 거스르는 리팩토링 노하우 원티드 초기 구조스트랭글러 패턴을 이용한 리팩토링 스트랭글러 외관을 이용해 라우터 구현 부분부분씩 구현하여 대체함기술부채 코드를 이해할 수 없거나 받아들일 수 없는 상태해결방법 코드를 다수가 이해할 수 있는 방식으로 바꼬면 부채를 해결할 수 있다. 문서화 테스트 함수형 프로그래밍SPA To SSR 이번에도 스트랭글러 패턴질문 gzip 압축이 서버사이드 렌더링전에 가장 효율적인 방법","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-gdg.01.why_type_script_with_clean-architecture","slug":"seminar-gdg.01.why_type_script_with_clean-architecture","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.793Z","comments":true,"path":"2019/12/04/seminar-gdg.01.why_type_script_with_clean-architecture/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-gdg.01.why_type_script_with_clean-architecture/","excerpt":"","text":"Why Typescript with Clean Architecture레이니스트 정유진(gpeddler@rainist.com) 거대한 웹 프로젝트를 경험하면서 느꼈던 문제의식과 결론 제품관점: 방대한 지식의 경우 어떻게 통제 협업관점: 올바른 관졈을 다같이 공유하는 것 개발환경 관점: 자바스크립트의 실수하기 좋은 환경Type safe한 언어Typescript기반으로 지식중심의 명확한 아키텍쳐를 설계Domain Driven Architecthre -&gt; 클린 아키텍쳐도메인 기반 전문가와 엔지니어가 모여 서로 조율하고 엔지니어링빠른 개발 퍼포먼스 서비스의 변화에 따른 코드 변화가 최소한 인것Clean ArchtecthreEntity, UseCase, Controller, UI변화에 따른 콛변화를 통제할 수 있는 아키텍쳐코드는 공유정리 번 해결 이후도메인 중심을 설계하여 해결.지식이 늘어나거나 변화해도 변하는 부분이 일정.업무시간 추정에도 일부 도움 번 해결 이후DDD를 통해 코드베이스의 명확한 중심이 생김 번 해결 이후Typescript로 보다 안전한 코드베이스, Layered Architecture로 참조관계가 명확해져서 코드 테스트가 원활해짐.ㄴ","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-gdg.02.frontend_modern","slug":"seminar-gdg.02.frontend_modern","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.795Z","comments":true,"path":"2019/12/04/seminar-gdg.02.frontend_modern/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-gdg.02.frontend_modern/","excerpt":"","text":"모던 프론트엔드 파악하기오늘날의 프론트엔드키워드동적렌더링: SPA모듈링/번들링: Grund, Webpack타이핑:테스트 자동화: 모던 프레임워크 톺아보기프레임워크앵귤러: 모든기능이 빌트인, 성능이 훌륭, 러닝커브 높음리액트: 에코시스템 활발, 의존과 버전에 민감, 라이브러리 자체기능이 부족뷰js: 가볍고 진입장벽이 낮으며, 각프레임워크 장점을 흡수, 크기가 커질수록 재활용성이 떨어지고 테스트하기 어려워짐 앵귤러타입스크립트랑, 뷰랑 바인딩되어있음 리액트코드안에 뷰가 포함되어있음.1way 바인딩. 2way 할경우 스테이트 관리 해줘야함 뷰js트랜드리엑트가 트랜드 및 에코시스템이 가장 활발뷰가 무서운속도로 따라 붙음 러닝커브앵귤러 전에 다른 프레임워크 경험 권장리액트는 라이프사이클과 상태관리는 상대적 어려움뷰js 먼저 해보는것 추천 AOT 조기 컴파일성능 50% 정도 향상 버추얼 돔성능을 위해서 Dom의 엑세스를 줄임가상돔으로 먼저 한다음 결과 반영 컴포넌트###마이크로 프로젝트 뷰서버사이드 렌더링 react 오픈소스앵귤러: 아이오닉, 아이오닉 네이티브리엑트: 터치스톤, 리액트네이티브뷰: …, weex-&gt; 모두 일렉트론 지원 서버사이드 렌더링앵귤러 유니버셜리액트돔서버뷰서버렌더러-&gt; spa, 검색 최적화를 위한것 실무자를 위한 Tips mvvm 상태관리에 유념 immutable은 무적이 아닙니다. 성능이 안나옴 HMR(Hot Module Replacement) 기존상태를 잃지않고 코드가 바로 교체, 새로저장한코드 Shadow DOM DOM Webpack의 끔찍한 빌드속도 dll 플러그인 발표자료https://www.slideshare.net/KennethCeyer/gdg-devfest-2017-seoul-82177288","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-gdg.03.the_flow_of_tenserflow","slug":"seminar-gdg.03.the_flow_of_tenserflow","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.797Z","comments":true,"path":"2019/12/04/seminar-gdg.03.the_flow_of_tenserflow/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-gdg.03.the_flow_of_tenserflow/","excerpt":"","text":"The flow of Tenserflow신정규, Lablup Inc. 소개파이썬 인터페이스리눅스 맥osnvidia 사용텐서플로우는 6주마다 나오고, 이전버전 데이터는 쓸 수없는 경우가 많음. tensorflow serve케라스 케라스 코드를 지원Tensorflow Datasetstf Eager executiontensorflow lite 모바일용 텐서플로우 모바일에서 어느정도 전처리를 해서 보내는 용도Android Neural network api마켓 변화api 사이드 머신러닝유저사이드 딥러닝 서비스: iot스피커 관련:오픈소스: 개발자들이 쉽게 개발자로 접근하도록서버사이드 머신러닝: 계속 증가중브라우저사이드 머신러닝: webgl, webassembly 모든 메인스트림 브라우저에서 웹 어셈블리 지원-&gt; 온갖종류의 오픈소스와 벤처onnx, mlmodel: 뉴럴 표준 모델","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-gdg.05.jamstack","slug":"seminar-gdg.05.jamstack","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.800Z","comments":true,"path":"2019/12/04/seminar-gdg.05.jamstack/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-gdg.05.jamstack/","excerpt":"","text":"JAMstack이 Giihub와 CloudeFlare를 만날때 고성능 웹 어플리케이션 호스팅은 무료가 된다.By Byungjin ParkHow it feels to learn javascript in 2016? JAM STACK###모던앱을 위한 스택Javascript:API:Markup: 배포시 빌드 가능한 마크업 템플릿 엔진 사용(깃북, 지킬, 휴고, 헥소, 웹팩) StaticGen스태틱사이트 제네레이터 비교 사이트 Profits좋은 퍼포먼스운영 웹서버 불필요, 정적파일 호스팅만 필요CDN을 활용한 높은 보안Better Developer Experience Best Practices 모든 프로젝트는 CDN에 업로드 배포시 CDN 즉시 폐기 배포는 모든 변경파일이 업로드 완료시에 적용 git으로 버전관리를 하고 단일 표준 명령어로 어플리케이션 필드 Babel, PostCSS, Webpack과 같은 모던 빌드 도구 활용하여 최신 JS 문법 사용 빌드 자동화로 JAMstack 마크업 변경사항 실시간 확인DEPLOYMENT Github Pages + CloudFlare: 무료 githubpages jekyll 기반의 기본템플릿 지원 Github저장소 1GB 사용제한 월100GB 대역폭 시간당 10개빌드, 빌드가 필요한경우 결과물을 특정 디렉토리 혹은 브랜치에 보관 필요 cloudFlare: CDN 업체 역방향 프록시 역할수행 무료로 전세계 CDN및 무료로 CDN 및 SSL인증서, DDos 방어 서비스 제공 개인 도메인을 소유하고 있어야하며, 네임서버를 CloudFlare로 설정 필요 Netlify: 무료 GitHub/BitBucket/Gitlab과 계정 연동및 쉬운 프로젝트 호스팅 제공 무료로 CDN 및 SSL인증서 지속적인 배포 제공 공식 api및 cli 도구 제공 개인도메인을 소유하고 있어야하며, 네임서버를 해당으로 사용 AWS S3 + CloudFront: 유료 AWS상에서 서비스를 운영하는 경우DEMOGithubpagesnetlify 메인에 깃허브에서 가져오는것이 가능요약서비스 목적에 맞는 웹 기슬수택을 선택목적과 맞다면 웹서비스 설계시, JAMstack을 고려하자옴니어스 개발자 모집","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-gdg.04.react_django","slug":"seminar-gdg.04.react_django","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.798Z","comments":true,"path":"2019/12/04/seminar-gdg.04.react_django/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-gdg.04.react_django/","excerpt":"","text":"React와 Django로 만드는 Progressive WebApp.진유림, 핑크퐁 Prograssive Web App 프로그레시브 반응형 지원 설치가능&amp;웹과 유사 따로 업데이트를 할 필요가 없음Service Worker 브라우저와 서버 사이의 미들웨어 Cashe-First Strategy 서비스워커를 브라우저에 등록하기 create-react-app sw-precach 홈 화면에 추가해서 앱처럼 쓰기 menifest.json 파일 작성브라우저 사파리 지원안함Web Push firebase cloud messaging 파이어베이스를 통해서 편하게 푸쉬 메세지를 보내고 받을 수 있음 foreground, background 따로 구현해야함 파이썬: Pyfcm 모바일은 홈화면에 추가했을때, pc는 브라우저가 켜져있을때pwa 후기 먼저 pwa를 적용을 꼭해야하는지 생각 서비스워커의 구조 이해 토이프로젝트, 사내서비스에 선 적용해보기https://github.com/milooy/react-django-pwa-kit","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-masocon2017","slug":"seminar-masocon2017","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.801Z","comments":true,"path":"2019/12/04/seminar-masocon2017/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-masocon2017/","excerpt":"","text":"우아한 오픈소스우아한형제들 김민태 수석 WoowahanJS 퍼블리셔와 프론트엔드 개발자의 협업B2C web App잦은 UI 업데이트복잡하고 디테일한 UI 구성트랜드에 민감함 UX재사용률 1.5%Backoffice Web App단순한 CRUD 구조재사용률 높은 UI촉박한 개발 일정쉽게 확장되는 스케일웹 앱은 무엇을 하는가?Template string + Data =&gt; HTML + CSSgitbook-markdown릴리즈 관리서비스 개발과 근본적으로 다르다 오픈소스를 개발하면서 버전관리의 기틀마련 오픈소스를 활용한 AI기반 검색 서비스 구축기버즈니 남상협 대표검색엔진 어떤 엔진을 쓸것인가LuceneElasticsearchSolar 검색의 기본 1 - 언어처리(Segmentation) 검색어를 의미 단위로 잘 나누는것이 기본중의 기본. 설정하지 않을 경우, bigram으로 쪼개게 됨. 도메인 specipic하기 때문에 자체적으로 언어처리 오픈소스를 만들게됨 자체적으로 학습 데이터를 만든후 CRF++라는 오픈소스 활용 -&gt; BiLSTM-CRF 기법 검색의 기본 2 - 성능평가 취지 성능의 기준접 필요 검색 랭킹에 사용되는 요소들의 가중치 기준점도 필요 만드는 방법 특정 query에 대해 나오는 검색 결과에 대해서 high relevant, relevant, non relecant, pam 등으로 표시해서 만듬 Normalized Discounted Cumulative Gain 기법으로 평가 검색 + AI, 카테고리 분류기 카테고리 분류 문제, ex&gt; 노트북 -&gt; 노트북 받침대 나옴 Query의 카테고리와 상품의 카테고리를 비교해야 문제 해결 가능 개발 툴 : Jupyter Notebook 개발하는데 활용 머신러닝 : Sscikit-Learn의 SVM 모델로 학습, 현재는 Torch를 사용하여 딥러닝 피쳐가지 활용 1억개 상품에 대해서 수천개의 카테고리로 자동으로 분류 검색 + AI, Learning To Rank query와 상품간의 카테고리 매치 점수를 비롯한 다양한 랭킹요소 -&gt; Elasticsearch의 Function_score기능 Learning to rank 검색 + AI - 이미지 인식 검색 기술 개발 이미지에서 Feature추출: torch의 cnn모델 사용 이미지에서 특정 객체 인식: Faster RCNN 상품 정보 검색: Elasticsearch 샷핑이라는 서비스 출시함 오픈소스들을 잘 활용하려면? 깃허브 트렌딩 주기적으로 살펴보기 명확한 니즈가 있을때 사용하고, 실제 서비스 적용하기 사용하려는 분야에 대한 꾸준한 학습 피룡하면 오픈소스 코드 내부를 보고 고쳐서 사용할 정도의 실력 키우기라이트닝 토크() 한글로하는 일본어 입력 아시아 우분투 컨퍼런스 Snap, Flatpak, AppImage 오픈스택 커뮤니티 프로그래머블 인프라 추억의 자바스크립트React.js에 반응하라김동우(gimdongwoo@gmail.com)자바스크립트 개발자 포럼Angular.js vs React.js리액트 특징 Vertual DOM 리랜더링이 일어날때 diff만 계산해서 다시그림 Data flow 단방향 주어딘 데이터가 같으면 같게 그려짐 추적하기 쉬움 JSX XML 문법을 JS 코드에서 사용 html 같아 보이지만 아님 Declarative 선언적 뷰는 코드를 예측하기 쉽게 만들어줌 Component 재사용 가능한 UI 덩어리 Lifecycle 데이터를 property로 부모로부터 주입 Lifecycle React는 Component tree 선언적 뷰 렌더링이 주는 편안함React Native 네이티브 앱 80%의 코드가 js로 ios/android 공유됨필요한것 Redux JS 앱을 위한 예측가능한 상태 컨테이너 미들웨어 ReactRouter 브라우저로부터 url을 라우팅 하는것-&gt;뷰를 골라줌 서버사이드 랜더링을 위한 필수요소 nodejs + Express React 번들을 provide하기에 제일 적합함 React-hot-loader를 사용해서 효율성 webpack javascript번들링 툴 webpack-dev-server Babel -ES6 + JS 문법을 브라우저 지원에 맞게 트랜스 코딩 -webpack의 barbel-loader 호출 간편하게 -무작정 시작하기 : create-react-app -간편하게 SSR : Next.js부록 해서 안되는것 Random value Render가 일어날때마다 값이 바뀌는 패턴을 만들면 망 math.random(), new Date() 쓸때 주의 Uncontrolled input질문 : React - ReactNative 간 코드 공유가 되나 비즈니스로직은 공유가 되나. React - ReactNative 간의 코드 공유는 불가Electron, Typescript, 성공적서울JS 이웅재 운영진일렉트론 데스크탑 어플리케이션을 만드는 용도 HTML/CSS/JavaScript ui -&gt; chromium ui 라이브러리 기반 JavaScript로 OS와 연결된 Electron Api Node.js 완전히 사용 가능 Node.js npm 모듈 사용가능일렉트론을 쓴것 Now 데스크탑, 깃헙 데스크탑, 하이퍼 cmd장점 프로젝트가 빠르게 성장 서드파티 커뮤니티: Electron Userland 검증되있고, 상용을 위한 준비가 잘 되어있음 자동업데이트, 설치, 배포 관련 VS Code가 표준단점 기본 실행파일이 100M 리소스를 많이 먹음 윈도우에서의 사용이 상대적으로 불안정 소스보호를 공식적으로 제공하지 않음 소스를 다 볼 수 있음Proto pie에서 도입한 이유 웹개발자가 접근하기 쉬움 많은 UI 레퍼런스가 있음 크로스 플랫폼 좋은 퀼의 앱을 빠른시간에 런칭 ES6를 자연스레 사용 es7 async-awaitTypeScript 도입javascript 컴파일 언어 javascript에 없는 스팩을 손쉽게 사용 가능 타입 시스템이 가장 핵심커맨드 패턴 적용 해서 쓰고있음R로만드는 API서버 삽질기박찬엽협업으로 달라붙고, 빌드 자동화로 편해지자.배준현 코무합니다만협업툴 아틀라시안, 트렐로소스관리툴 깃랩빌드 master 브랜치 트리거 Travis CI -&gt; github에 붙여쓸수있는 젠킨스오픈소스 라이선스와 컴플라이언스한국공개소프트웨어협회박준석 수석, dkaien77@hanmail.net오픈 소스 소프트웨어 라이선스소스코드를 개방했을 뿐이지, 저작권으로 보호 받고 있음GPL: 상업적으로 이용어려움분류 Permissive 제한없음 Weak Copyleft 약한제한 Strong Copyleft 강한제한 -&gt; 대부분의 오픈소스는 배포시에 의무가 적용 조심 GPL GPL 전염 코드 수정없이, 다른 프로세스로 사용하면 적용이 안됨 소스코드 받아서 재배포 가능 LGPL StaticLink: Object Code 제공, Dynamic Link: 제공필요없음 소스코드 공개 의무 전혀 없음 AGPL 통신을 해도 통신을 하는 사용자에게 소스 코드 공개 필요 공개의무가 없는 라이선스로 선언된 드라이버 있으면 필요 없음 MPL 복사하거나 복사해서 수정한 코드만 공개 EPL 모듈단위 공개의무양립성 라이선스끼리 같이 사용못하는 경우도 있음 하이브리드 라이선스버전변경 업데이트를 하면 라이센스 변경 가능특허이슈 특허 무료 사용 권한 허용오픈소스 라이선스 컴플라이언스 제품 정책 결정 오픈소스 적합성 검토 취약점 검토 양림성 검토 파솔로지, 오픈소스 라이센스 검토 개울가의 올챙이 한마리, 꼬물 꼬물 헤엄치다.테드폴허브 조현종 대표평펌한 개발자 오픈소스로 먹고살기 v0.3오픈소스 올챙이 엔터프라이즈를 팔아서 수익오픈소스로 먹고사는 방법 오픈소스 회사에 입사해서 개발 입사해서 오픈소스 개발 오픈소스를 만들어서 후원/창업TOAD vs 올챙이데이터 정의로 밝힌 내 삶의 햇볕카카오뱅크 성동찬 DBABackup 복구, 소산 등 백업대상의 IDC가 변경될 수 있다MHA + LOSRESS REPLICATION","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"seminar-ubuntu17.11.04","slug":"seminar-ubuntu17.11.04","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.803Z","comments":true,"path":"2019/12/04/seminar-ubuntu17.11.04/","link":"","permalink":"https://jungeol.github.io/2019/12/04/seminar-ubuntu17.11.04/","excerpt":"","text":"우분투한국커뮤니티 11월 대전지역세미나2017.11.03 개발자를 위한, 윈도 10으로 시작하는 우분투 리눅스MS mvp 남정현 WSL ELF64 바이너리 수준의 호환성 보장 Windows에너 리눅스 실행 cygwin과 비교시 명확한 장점 docker와 가장 유사제한 커널 관련 업데이트 가상화기술, 애찯ㄱ zjsxpdlsj OpenGL, SDL 등 멀티미디어 기능 데몬, 자동실행되는 백그라운드 서버case by case X11 apps Tenserflow, GPU 안됨상호 운영성 Linux -&gt; Window: ok Windows -&gt; Lunux: 파일은 보이나 연동은 X리눅스 간편 초기화 앰에서 unbuntu 검색후 고급옵션 -&gt; 초기화상호연동 bash.exe wslconfig.exe코드 예시CallUbuntu &quot;ls -al /&quot;x window Xming, VCXSRV OpenGl이 필요한경우 후자발표자료 https://www.medium.com/@rkttu LTE-M 이동통신과 IoTLTE망을 이용한 전용 프로토콜임베디드SW와 보안owasp -&gt; 공통적으로 발생하는 보안이슈 정보","categories":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/categories/seminar/"}],"tags":[{"name":"seminar","slug":"seminar","permalink":"https://jungeol.github.io/tags/seminar/"}]},{"title":"sql-mssql","slug":"sql-mssql","date":"2019-12-04T12:40:29.000Z","updated":"2020-02-26T02:27:36.797Z","comments":true,"path":"2019/12/04/sql-mssql/","link":"","permalink":"https://jungeol.github.io/2019/12/04/sql-mssql/","excerpt":"","text":"mssql tipsUNIQUEIDENTIFIER사용 및 insert시 값 가져오기1CREATE TABLE TY ( 2 Y_id UNIQUEIDENTIFIER DEFAULT (newsequentialid()) PRIMARY KEY,3 Y_name varchar(20) NULL,4); 5declare @guid table (Y_id UNIQUEIDENTIFIER);67INSERT into TY(Y_name)8output INSERTED.Y_id into @guid9VALUES (&#39;Rosalie&#39;);1011SELECT (select top(1) Y_id from @guid) as blabla1213SELECT * FROM TY; 1415drop table TY; newdate1select GETDATE() as newdate","categories":[{"name":"db","slug":"db","permalink":"https://jungeol.github.io/categories/db/"},{"name":"mssql","slug":"db/mssql","permalink":"https://jungeol.github.io/categories/db/mssql/"}],"tags":[{"name":"mssql","slug":"mssql","permalink":"https://jungeol.github.io/tags/mssql/"}]},{"title":"vim-basic","slug":"vim-basic","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.806Z","comments":true,"path":"2019/12/04/vim-basic/","link":"","permalink":"https://jungeol.github.io/2019/12/04/vim-basic/","excerpt":"","text":"BasicVim tutorial urlhttp://www.openvim.com/tutorial.html","categories":[{"name":"vim","slug":"vim","permalink":"https://jungeol.github.io/categories/vim/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://jungeol.github.io/tags/vim/"}]},{"title":"windows_bat-xcopy","slug":"windows_bat-xcopy","date":"2019-12-04T12:40:29.000Z","updated":"2019-12-06T02:00:45.808Z","comments":true,"path":"2019/12/04/windows_bat-xcopy/","link":"","permalink":"https://jungeol.github.io/2019/12/04/windows_bat-xcopy/","excerpt":"","text":"xcopy.bat file 1SET START_DATE&#x3D;11-23-20172SET BAT_PATH&#x3D;%~dp03SET EXPORT_FOLDER&#x3D;%~dp0..\\_files_export_by_date45xcopy %BAT_PATH%*.* %EXPORT_FOLDER% &#x2F;Y &#x2F;S &#x2F;EXCLUDE:%BAT_PATH%xcopy_exclude_by_date &#x2F;D:%START_DATE% exclude file 1ParsingPdf.pdb2ParsingPdf.vshost.exe3.suo4.e2e5.log6hidden_changes.conf7\\dll\\8\\bin\\9\\obj\\10\\temp\\html\\11\\extjs\\ext12\\generator\\13\\ActionProviderImplementation\\14\\plugin\\cmis_app\\15.csproj16.csproj.user17.config18.dbml19.dbml.layout20.designer.cs21.Designer.cs22.settings23\\scripts\\","categories":[{"name":"windows_bat","slug":"windows-bat","permalink":"https://jungeol.github.io/categories/windows-bat/"}],"tags":[{"name":"windows_bat","slug":"windows-bat","permalink":"https://jungeol.github.io/tags/windows-bat/"}]}]}